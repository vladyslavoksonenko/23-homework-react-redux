{"version":3,"sources":["store/type.js","store/reducer.js","store/store.js","components/Post.jsx","components/Posts.jsx","components/PostAdd.jsx","store/actions.js","App.js","reportWebVitals.js","index.js"],"names":["CREATE_POST","initialState","posts","reducer","state","action","type","concat","payload","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","Post","props","console","log","post","className","alt","src","authorAddPost","logo","name","nickname","date","text","urlImg","like","connect","length","map","id","PostAdd","submitHandler","event","preventDefault","trim","newPost","Date","now","toString","createPost","setState","changeInputHandler","prev","target","value","changeSelectionHandler","authors","onSubmit","this","placeholder","onChange","author","index","React","Component","mapDispatchToProps","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2e1d64fc.chunk.js","sourcesContent":["export const CREATE_POST = 'CREATE_POST';","import { CREATE_POST } from './type'\n\nconst initialState = {\n\n  posts: [],\n\n}\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case CREATE_POST: \n      return {...state, posts: state.posts.concat([action.payload])} \n    default: return state\n  }\n}\n\nexport default reducer;","import { createStore } from \"redux\";\nimport reducer from \"./reducer\"\n\nconst store = createStore(reducer, \n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\n\nexport default store;","import React from 'react';\n\nexport default function Post(props) {\n  console.log(props)\n\n  const {post} = props;\n  return (\n    <div className=\"post\">\n      <div className=\"post__logo\">\n        <img alt=\"\" src={props.post.authorAddPost.logo} />\n      </div>\n      <div className=\"post__description\">\n        <div className=\"post__header\">\n          <div className=\"post__user-info\">\n            <div className=\"post__user\">\n              <span className=\"user-name\">{props.post.authorAddPost.name}</span>\n              <span className=\"user-hashtag\">{props.post.authorAddPost.nickname}</span>\n              <span className=\"user-data-post\">{props.post.date}</span>\n            </div>\n          </div>\n        </div>  \n        <span>{post.text}</span>\n        <img alt=\"\" src={post.urlImg}/>\n        <div className=\"post__actions\">\n        <span className=\"post___like\">&#9829;<span>{props.post.like}</span></span>\n      </div>\n      </div>\n    </div>\n  );\n}\n","import React from 'react';\nimport Post from './Post';\nimport { connect } from 'react-redux';\n\nconst Posts = ({posts}) => {\n  // const PAVEL_DUROV = \"https://upload.wikimedia.org/wikipedia/commons/6/68/TechCrunch_Disrupt_Europe_Berlin_2013_%2810536888854%29_%28cropped%29.jpg\";\n  // const RAY_IMAGE = \"https://telegram.org/file/464001284/3/rHzxN3afclE.253809/78fbb9de14cac31e08\";\n  // const RAY_IMAGE2 = \"https://telegram.org/file/464001519/2/pw2YpXpzBFk.222382/9ec672b0125c50ad34\";\n  if (!posts.length) {\n    return <p>Пости поки відсутні</p>\n  }\n  return posts.map(post => <Post post={post} key={post.id} />)\n     \n}\n\nconst mapStateToProps = (state) => {\n  return { \n    posts: state.posts\n  }\n}\n\nexport default connect(mapStateToProps , null)(Posts);","import React from 'react';\nimport {createPost} from '../store/actions'\nimport { connect } from 'react-redux';\n\nclass PostAdd extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      text: \"\",\n      urlImg: \"https://\",\n      authorAddPost: \"\",\n      date: Date.now(),\n      like: 0,\n      authors: [\n      {\n        nickname: \"@pavel_durov\",\n        name: \"Pavel Durov\",\n        logo: \"https://upload.wikimedia.org/wikipedia/commons/6/68/TechCrunch_Disrupt_Europe_Berlin_2013_%2810536888854%29_%28cropped%29.jpg\"\n      },\n      {\n        nickname: \"@mark_zuckerberg\",\n        name: \"Mark Zuckerberg\",\n        logo: \"https://upload.wikimedia.org/wikipedia/commons/thumb/1/18/Mark_Zuckerberg_F8_2019_Keynote_%2832830578717%29_%28cropped%29.jpg/1280px-Mark_Zuckerberg_F8_2019_Keynote_%2832830578717%29_%28cropped%29.jpg\"\n      },\n    \n    ]\n    };\n  }\n\n  submitHandler = (event) => {\n    event.preventDefault();\n\n    const {text, urlImg, authorAddPost} = this.state;\n\n    if (!text.trim()) {\n      return;\n    }\n\n    const newPost = {\n      text, urlImg, authorAddPost, id: Date.now().toString()\n    }\n    \n    this.props.createPost(newPost);\n    this.setState({text: \"\", urlImg: \"https://\"})\n  }\n\n  changeInputHandler = (event) => {\n    this.setState(prev => ({ ...prev, \n      ...{[event.target.name]: event.target.value}\n    }));\n  }\n\n  changeSelectionHandler = (event) => {\n    this.setState({authorAddPost: this.state.authors[event.target.value]})\n  }\n\n  render() {\n    return (\n      <div className=\"post-add\">\n        <form onSubmit={this.submitHandler} className=\"post-add__form\">\n          <input type=\"text\" className=\"post-add__text-post\" placeholder=\"Text\" name=\"text\" value={ this.state.text } onChange={ this.changeInputHandler } />\n          <input type=\"text\" className=\"post-add__image-url\" name=\"urlImg\" value={ this.state.urlImg } onChange={ this.changeInputHandler } />\n          <select name=\"authors\" className=\"post-add__select\" onChange={ this.changeSelectionHandler }>\n            <option value=''>Select</option>\n            {this.state.authors.map((author, index) => <option key={author.nickname} value={index}>{author.name}</option>)}\n          </select>\n          <input className=\"post-add__button\" type=\"submit\" value=\"Додати\" />\n        </form>\n      </div>\n    )\n  }\n}\n\nconst mapDispatchToProps = {\n  createPost\n}\n\n\nexport default connect(null, mapDispatchToProps)(PostAdd);","import { CREATE_POST } from \"./type\"\n\nexport function createPost (posts) {\n  return {\n    type: CREATE_POST,\n    payload: posts  \n  }\n}\n\n","import './App.scss';\nimport { Provider } from 'react-redux';\nimport store from './store/store'\nimport Posts from './components/Posts'\nimport PostAdd from './components/PostAdd'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Provider store={store}>\n        <PostAdd />\n        <Posts posts={[1, 2, 3]} />\n      </Provider>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}